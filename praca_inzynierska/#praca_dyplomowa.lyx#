#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass aghdpl
\begin_preamble
% \documentclass{aghdpl}               % przy kompilacji programem latex
% \documentclass[pdflatex,en]{aghdpl}  % praca w języku angielskim
% dodatkowe pakiety
\usepackage{enumerate}
\usepackage{listings}
\lstloadlanguages{TeX}
\usepackage{caption} 
\captionsetup[figure]{labelformat=simple, labelsep=period}
\captionsetup[table]{labelformat=simple, labelsep=period}
%\captionsetup{font=small}
\captionsetup{margin=10pt, font={small}, labelfont=bf, format=hang}
\usepackage{esint}
\clubpenalty = 10000
\widowpenalty = 10000
%\usepackage{graphicx}
%\usepackage{grfext}
%\AtBeginDocument{%
% \PrependGraphicsExtensions*{
%    .mps,.MPS,.pdf,.PDF,.eps,.EPS,.ps,.PS,
%    .png,.PNG,.jpg,.jpeg,.JPG,.JPEG,
%    .funny,.foobar
%  }%
%  \PrintGraphicsExtensions % see .log file
%}
% \usepackage[sort=none]{biblatex}
% \setlength{\itemsep}{-1\parsep}
%---------------------------------------------------------------------------
%\usepackage{epstopdf}
\usepackage{mciteplus}
% umozliwia wykrycie nieznanych znaków unicode
\usepackage{newunicodechar}
\DeclareUnicodeCharacter{FFFD}{?????}
\end_preamble
\options pdflatex
\use_default_options true
\maintain_unincluded_children false
\language polish
\language_package auto
\inputencoding utf8
\fontencoding global
\font_roman utopia
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics none
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\float_placement H
\paperfontsize 12
\spacing onehalf
\use_hyperref true
\pdf_title "Praca dyplomowa"
\pdf_author "Rafał Prusak"
\pdf_subject "Wideodetekcja pojazdów samochodowych"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry false
\use_package amsmath 0
\use_package amssymb 0
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indeks
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language polish
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "frame=tblr"
\tracking_changes false
\output_changes false
\html_math_output 3
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
author{Rafał Prusak}
\end_layout

\begin_layout Plain Layout


\backslash
shortauthor{R.
 Prusak}
\end_layout

\begin_layout Plain Layout


\backslash
titlePL{Wideo detekcja pojazdów samochodowych w ruchu drogowym}
\end_layout

\begin_layout Plain Layout


\backslash
titleEN{Video-based vehicle detection for road traffic applications}
\end_layout

\begin_layout Plain Layout


\backslash
shorttitle{Wideo detekcja pojazdów samochodowych w ruchu drogowym}
\end_layout

\begin_layout Plain Layout


\backslash
faculty{Wydział Elektrotechniki, Automatyki,
\backslash

\backslash
Informatyki i Inżynierii Biomedycznej}
\end_layout

\begin_layout Plain Layout


\backslash
division{}
\end_layout

\begin_layout Plain Layout


\backslash
specialization{Automatyka i Robotyka}
\end_layout

\begin_layout Plain Layout


\backslash
thesistype{Praca dyplomowa inżynierska}
\end_layout

\begin_layout Plain Layout


\backslash
supervisor{dr inż.
 Zbigniew Marszałek}
\end_layout

\begin_layout Plain Layout


\backslash
acknowledgements{Wymaga odkomentowania linijek w aghdpl.cls} 
\end_layout

\begin_layout Plain Layout

%
\backslash
date{2015} 
\end_layout

\begin_layout Plain Layout


\backslash
titlepages
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{tocdepth}{1}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Wstęp
\begin_inset CommandInset label
LatexCommand label
name "chap:Wstep"

\end_inset


\end_layout

\begin_layout Standard
Wraz z rozwojem motoryzacji i infrastruktury drogowej pojawiła się konieczność
 badania parametrów ruchu drogowego.
 Badania mają na celu pozyskanie informacji o liczbie pojazdów i ich typie,
 stanie dróg, wpływie samochodów na środowisko naturalne i życie mieszkańców,
 czy przyczynach wypadków samochodowych.
 Rezultaty badań są ważnym czynnikiem, branym pod uwagę przy planowaniu
 rozbudowy infrastruktury.
 
\end_layout

\begin_layout Standard
Istnieje kilka metod przeprowadzania pomiarów, takich jak pomiar punktowy,
 odcinkowy, strefowy.
 Podstawowym narzędziem przeprowadzania pomiaru jest detektor.
 Jest to urządzenie składające się z czujnika, układu kondycjonowania, dyskrymin
atora oraz elementu wykonawczego.
 W metodzie punktowej wykorzystuje się detektory punktowe, których zadaniem
 jest wykrywanie, zliczanie i identyfikacja parametrów pojazdów przejeżdżających
 przez stanowisko pomiarowe.
 Pomiar na odcinku wymaga zastosowania pary detektorów bądź zaawansowanego
 systemu kamer.
 W przeciwieństwie do pierwszej techniki, umożliwia zmierzenie natężenia
 ruchu.
\end_layout

\begin_layout Standard
Zastosowany w detektorze czujnik jest najważniejszym elementem decydującym
 o cechach detektora.
 Wykorzystywane czujniki dzieli się na dwie kategorie: wbudowane oraz bezinwazyj
ne.
 Do pierwszej kategorii zalicza się m.
 in.
 czujniki indukcyjne, pneumatyczne, kwarcowe.
 Montuje się je bezpośrednio w jezdni lub bądź na powierzchni.
 Ich instalacja wymaga kosztownej i czasochłonnej ingerencji w nawierzchnię
 drogi, która wiąże się z koniecznością czasowego zamknięcia pasa ruchu.
 Są one również podatne na czynniki zewnętrzne, takie jak temperatura czy
 wilgotność.
 
\end_layout

\begin_layout Standard
Z drugiej strony, wykorzystywane są metody bezinwazyjne, bazujące na czujnikach
 laserowych, ultradźwiękowych czy przetwarzaniu obrazu.
 Systemy wizyjne nalazły wykorzystanie w wielu aspektach, takich jak: sprawdzani
e obecności pieszych i pojazdów, wykrywanie przeciążonych pojazdów, punktowe
 i odcinkowe pomiary prędkości, systemy poboru opłat czy kontrola dostępu.
 W wielu miastach, które z natury mają ograniczone możliwości rozbudowy
 infrastruktury, stosuje się systemy monitorowania, w celu optymalizacji
 sterownia przepływem pojazdów na skrzyżowaniach.
 
\end_layout

\begin_layout Standard
Wideo-detektory są proste w montażu, przenośne oraz odporne na oddziaływanie
 środowiska.
 W wyniku wzrostu mocy obliczeniowej komputerów, detektory umożliwiają stosowani
e zaawansowanych algorytmów odpornych na warunki pogodowe oraz dysponują
 wysoką wydajnością przetwarzania, przekraczającą 20 klatek na sekundę.
\end_layout

\begin_layout Section*
Cel i zakres pracy
\end_layout

\begin_layout Standard
W pracy przedstawiono zagadnienia związane z wykrawaniem i identyfikacją
 parametrów pojazdów na podstawie obrazu wideo.
 Napisano program, który z nagrań ruchu na odcinku drogi jednokierunkowej,
 uzyskiwał długość, wysokość, prędkość i kolor pojazdu.
 Źródło obrazu stanowiła kamera znajdująca się na poboczu drogi.
 Nagrania użyte podczas tworzenia i testowania oprogramowania, pochodziły
 z pomiarów dokonanych przez autora oraz ze stanowiska pomiarowego, używanego
 przez naukowców z Katedry Metrologi Akademii Górniczo-Hutniczej w Krakowie.
 
\end_layout

\begin_layout Standard
W rozdziale drugim omówiono najpopularniejsze typy detektory pod kątem ich
 parametrów, wad i zalet.
 Przedstawiono również sposób przeprowadzania pomiarów ruchu drogowego w
 Polsce.
 Rozdział trzeci zawiera opis możliwości systemów wizyjnych.
 W rozdziale podano dla przykładu kilka popularnych aplikacji komercyjnych,
 w których zastosowanie znalazło przetwarzanie obrazu.
 Rozdział czwarty to prezentacja użytych przez autora podczas tworzenia
 oprogramowania języka programowania, bibliotek oraz pomocniczych programów.
 W piątym rozdziale znajdują się informacje o strukturze, interfejsie i
 działaniu programu.
 Rozdział szósty opisuje zaimplementowany algorytm wykrywania samochodów,
 prezentując dokładnie jego etapy na przykładach.
 Zostały opisane metody identyfikacji poszczególnych parametrów samochodów.
 Rozdział siódmy zawiera analizę wyników działania programu.
 Rezultaty wideo detekcji porównano z wynikami pochodzącymi ze stanowiska
 pomiarowego wykorzystującego pętle indukcyjne.
 Na tej podstawie określono skuteczność programu oraz zidentyfikowano przyczyny
 błędów pomiaru.
 W rozdziale 8 znalazło się podsumowanie pracy.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Metody pomiarów parametrów ruchu drogowego
\end_layout

\begin_layout Section*
Generalny Pomiar Ruchu Drogowego
\end_layout

\begin_layout Standard
Pierwsze pomiary ruchu drogowego zostały przeprowadzone we Francji w XIX
 wieku.
 W Polsce w okresie międzywojennym przeprowadzano zliczanie pojazdów w miastach.
 w okresach szczególnego natężenia ruchu.
 Po II Wojnie Światowej wznowiono pomiary w 1954r.
 Od 1965, co 5 lat, dokonywany jest Generalny Pomiar Ruchu Drogowego (GPRD)
 
\begin_inset CommandInset citation
LatexCommand cite
key "GPRD1"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "GPRD2"

\end_inset

.
 Ma on na celu pozyskanie charakterystyk ruchu drogowego na wszystkich odcinakac
h dróg krajowych i wojewódzkich.
 Uzyskiwane w wyniku GPR pomiary są wykorzystywane przy planowaniu rozbudowy
 infrastruktury drogowej, organizacji ruchu, utrzymaniu dróg, określaniu
 przyczyn wypadkowości czy badaniu wpływu ruchu na komfort życia mieszkańców
 i środowisko naturalne.
\end_layout

\begin_layout Standard
W czasie pomiarów pojazdy są klasyfikowane do jednej spośród kategorii:
 motocykle, samochody osobowe, lekkie samochody ciężarowe, samochody ciężarowe
 bez przyczepy, samochody ciężarowe z przyczepami/ naczepami, autobusy,
 ciągniki rolnicze, rowery.
\end_layout

\begin_layout Standard
Pomiar w 2015 został przeprowadzony na 1954 odcinkach, z których 161 wykorzystyw
ało wideorejestrację.
 Był wykonywany metodami automatycznymi, półautomatycznymi oraz ręcznymi.
 Na drogach krajowych badania przeprowadzano w 11 terminach: przez 9 dni
 przeprowadzano pomiar dzienny w godzinach 6-22, w pozostałe 2 dni miał
 miejsce pomiar nocny od godziny 22 do 6 rano.
 Na drogach wojewódzkich przeprowadzono pomiar w 6 terminach, w tym jednym
 nocnym.
\end_layout

\begin_layout Standard
Pomiar ruchu przeprowadzony w 2010 wskazuje na wzrost ruchu pojazdów silnikowych
 na drogach krajowych o 22 procent.
 Najbardziej obciążone drogi znajdowały się w województwach śląskim, małopolskim
, łódzkim, dolnośląskim i mazowieckim.
 Trasami o największym natężeniu ruchu były autostrada A4(polski fragment
 trasy europejskie E40) oraz drogi krajowe nr 91, 6, 1(trasa europejska
 E75).
 Na tych droga średni ruch dobowy przekraczał 20000 pojazdów/dobę.
\end_layout

\begin_layout Standard
Metodologię dokonywania pomiarów, terminy pomiarów, zadania obserwatorów
 reguluje zarządzenie nr 38 Generalnego Dyrektora Dróg Krajowych i Autostrad
 z dnia 1 września 2014 r.
\end_layout

\begin_layout Section*
Parametry ruchu drogowego
\end_layout

\begin_layout Standard
Podczas dokonywania pomiarów dąży się do pozyskania zarówno indywidualnych
 informacji o pojazdach jak również ogólnej charakterystyki ruchu.
 Wyróżnia się w tym celu szereg parametrów:
\end_layout

\begin_layout Itemize
prędkość - chwilowa, jazdy, podróży, miarodajna,
\end_layout

\begin_layout Itemize
czas podróży - czas pokonania odcinka drogi,
\end_layout

\begin_layout Itemize
natężenie ruchu - liczba pojazdów na jednostkę czasu,
\end_layout

\begin_layout Itemize
gęstość ruchu - liczba pojazdów znajdujących się na odcinku drogi na jednostkę
 czasu,
\end_layout

\begin_layout Itemize
zajętość drogi - procent drogi zajęty przez pojazdy,
\end_layout

\begin_layout Itemize
bezpieczeństwo ruchu,
\end_layout

\begin_layout Itemize
wpływ na środowisko,
\end_layout

\begin_layout Itemize
zużycie paliwa.
\end_layout

\begin_layout Standard
Pomiarów ruchu drogowego dokonuję się w punkcie, na krótki odcinku drogi,
 w zdefiniowanym obszarze, na całej trasie lub za pomocą pojazdu/pojazdów
 próbnych poruszających się po drodze.
 Rozróżnia się 4 typy ruchu pojazdów: jazda swobodna, jazda przy maksymalnym
 przepływie, jazda w warunkach dużej gęstości oraz zator.
\end_layout

\begin_layout Standard
Indywidualny pojazd można opisać szeregiem wartości: klasą pojazdu, numerem
 rejestracyjnym, liczbą osi, odległościami między osiami, długością, szerokością
 , wysokością, prędkością czy naciskiem na jezdnię.
 Stosuje się także opis strefowy, środowiskowy, pogodowy i opis jezdni.
\end_layout

\begin_layout Section*
Detektory
\end_layout

\begin_layout Standard
Detektor jest to urządzenie składające się z czujnika, układu kondycjonowania,
 dyskryminatora oraz elementu wykonawczego.
 Jego celem jest wykrycie obecności pojazdu w punkcie bądź strefie pomiaru.
 Detektor powinien być urządzeniem prostym w obsłudze i montażu, bezawaryjnym,
 pozwalającym na łatwy odczyt informacji.
 Stosowane są dwa rodzaje detektorów: bezinwazyjne i wbudowane(instalowane
 w nawierzchni) 
\begin_inset CommandInset citation
LatexCommand cite
key "gajda"

\end_inset

.
 
\end_layout

\begin_layout Standard
Klasyfikacja detektorów wbudowanych:
\end_layout

\begin_layout Itemize
Linowy - drut stalowy lub linka nylonowa zamontowana jest na wysokości kilku
 minimetrów na jezdnią.
 Nacisk przejeżdżającego pojazdu powoduje naciąg linki i uruchomienie zestyku.
 Ten rodzaj detektory może generować fałszywe impulsy, wymaga regulacji
 i poprawy naciągu linki, ma ograniczoną maksymalna prędkość pomiarów.
 Jego zaletą jest prosta budowa.
\end_layout

\begin_layout Itemize
Taśmowy - dwie taśmy z gumowymi wkładkami, wypełnione gazem elektrycznie
 obojętnym.
 Nacisk pojazdu powoduje zetknięcie się ze sobą taśm.
 Do działania wymaga specjalnego osprzętu.
 Występują niekorzystne drgania styków.
 Montaż wymaga interwencji w nawierzchnię.
\end_layout

\begin_layout Itemize
Hydrauliczny - nacisk pojazdu na wąż wypełniony olejem powoduje podniesienie
 się poziomu w kapilarze i uruchomienie zestyku.
 Pojazdy o dużej masie mogą uszkodzić ten typ detektora.
\end_layout

\begin_layout Itemize
Pneumatyczny - działa na podobnej zasadzie co hydrauliczny.
\end_layout

\begin_layout Itemize
Reluktancyjny - nacisk samochodu powoduje zwierzenie się szczeliny.
 Następuje zmiana reluktancji obwodu magnetycznego w wyniku czego zmienia
 się częstotliwość sygnału wyjściowego.
\end_layout

\begin_layout Itemize
Rezystancyjny - nacisk pojazdu powoduje nieliniową zmianę rezystancji czujnika.
 Detektor ma ograniczoną prędkość pomiaru do max 80 km/h, więc jest rzadko
 wykorzystywany.
\end_layout

\begin_layout Itemize
Pojemnościowy - dwie elektrody oddzielone dielektrykiem.
 Nacisk pojazdu powoduje zmniejszenie szerokości kondensatora i zmianę jego
 pojemności.
 Czujniki te mają kiepską odporność na uszkodzenia mechaniczne i zasolenie.
 Ich montaż wymaga kosztownej interwencji w nawierzchnię.
\end_layout

\begin_layout Itemize
Piezoelektryczny - jest to taśma wykonana z materiału piezoelektrycznego
 lub kabel koncentryczny z umieszczoną w środku elektrodą.
 Czujniki są wrażliwe na zmiany temperatury, której wzrost powoduje pogorszenie
 jakości pomiaru.
 Mierzony może być jedynie nacisk zmienny w czasie, co ogranicza prędkość
 pomiaru do zakresu 20-110 km/h.
 Ten sposób pomiaru jest szeroko stosowany z powodu dużej czułości, szerokiemu
 zakresowi temperatury oraz niskiej cenie wykonania.
\end_layout

\begin_layout Itemize
Kwarcowe - działa na podobnej zasadzie co piezoelektryczny: nacisk samochodu
 na aluminiowy profil powoduje nacisk na element kwarcowy.
 Jest często stosowany w systemach ważenia pojazdów.
 W przeciwieństwie do poprzedniego typu, cechuje się odpornością na oddziaływani
e sił podłużnych i większą wrażliwością na oddziaływanie sił poprzecznych.
 Czujnik może pracować w szerokim zakresie temperatur i prędkości.
 Jest odporny na zakłócenia temperaturowe i elektromagnetyczne.
 Jego trwałość osiąga nawet 10 lat.
\end_layout

\begin_layout Itemize
Tensometryczny - używany jest zarówno w pomiarach nacisków osi pojazdów
 statycznych i dynamicznych.
 Ma postać platformy na której zamontowywane są tensometry, najczęściej
 w układzie pełnego mostka.Charakteryzuje się dużą dokładnością pomiaru(błędy
 rzędu 2% przy pomiarze statycznym).
 Może mierzyć pojazdy o prędkości do 200 km/h.
 Jego trwałość sięga 10 lat.
\end_layout

\begin_layout Itemize
Indukcyjny pętlowy - jest najbardziej rozpowszechnionym typem detektora.
 Może być stosowany w pomiarach prędkości, wysokości zawieszenia, ilości
 osi, detekcji incydentów.
 Uzyskiwany sygnał jest nazwany profilem magnetycznym pojazdu.
 Czujnik jest odporny na czynniki zewnętrzne, ma dużą trwałość, jego instalacja
 ma jezdni jest prosta i mało kosztowna.
\end_layout

\begin_layout Itemize
Magnetyczne - reaguje na zmiany pola magnetycznego.
 Jest bardziej czuły na zakłócenia niż pętlowy, ale jego instalacja w nawierzchn
i jest znacznie prostsza.
 
\end_layout

\begin_layout Standard
Drugim rodzajem detektorów są detektory nieinwazyjne.
 Spośród nich wyróżniamy:
\end_layout

\begin_layout Itemize
Laserowe aktywne - zbudowane są z nadajnika promieniowania, układu optycznego
 oraz odbiornika promieniowania.
 Mogą być wykorzystane do pomiaru prędkości, wysokości czy, przy odpowiedniej
 częstotliwości próbkowania, budowaniu profilu samochodu.
 Czujnik tej klasy mogą pracować w szerokim zakresie temperatur, wykazują
 odporność na warunki atmosferyczne oraz są niezależne od zewnętrznego oświetlen
ia.
\end_layout

\begin_layout Itemize
Laserowa pasywne - reagują na zmiany w promieniowaniu podczerwonym wywołane
 ruchem obiektów w obszarze detekcji.
 Detektor ren jest bardzo łatwy w instalacji - nie wymaga żadnej interwencji
 w ruch drogowy.
 Detektory tego typu nie oddziałują na siebie nawzajem.
\end_layout

\begin_layout Itemize
Akustyczne - składają się z matrycy mikrofonów, które zbierają dźwięki przejeżdż
ających samochodów: opony, silnik, ruch powietrza.
\end_layout

\begin_layout Itemize
Ultradźwiękowe - generują falę dźwiękową niesłyszalną dla człowieka, która
 służy wykrywaniu obecności obiektów w sferze detekcji.
\end_layout

\begin_layout Itemize
Mikrofalowe - działają na zasadzie radaru, generują fale wysokiej częstotliwości.
 Mogą pracować praktycznie w każdych warunkach.
\end_layout

\begin_layout Itemize
Kamery z systemami przetwarzania obrazu.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Systemy wizyjne w zastosowaniach komercyjnych 
\end_layout

\begin_layout Section*
Charakterystyka systemów wizyjnych
\end_layout

\begin_layout Standard
Systemy wizyjne są coraz częściej stosowane przy pomiarach parametrów ruchu
 drogowego.
 Początkowo służyły one jedynie wizualizacji pomiarów bądź jako pomoc dla
 operatora w procesie weryfikacji poprawności pomiarów dokonywanych innymi
 metodami.
 Rozwój mocy obliczeniowych komputerów sprawił, że pojawiła się możliwość
 automatycznej analizy obrazu i wydobywania z niego użytecznych informacji,
 takich jak:
\end_layout

\begin_layout Itemize
obecność pojazdów na skrzyżowaniach, drogach, tunelach, 
\end_layout

\begin_layout Itemize
kierunek ruchu,
\end_layout

\begin_layout Itemize
klasyfikacja pojazdów,
\end_layout

\begin_layout Itemize
pomiar natężenia ruchu,
\end_layout

\begin_layout Itemize
informacje o obecności pieszych i rowerzystów,
\end_layout

\begin_layout Itemize
detekcja incydentów drogowych.
\end_layout

\begin_layout Standard
Obecnie wykorzystywane aplikacje wizyjne mogą działać zarówno jako samodzielne
 metody pomiaru lub stanowić część systemów kontroli wykroczeń, pomiaru
 prędkości czy ważenia samochodów.
 
\end_layout

\begin_layout Standard
Systemy wizyjne posiadają wiele zalet:
\end_layout

\begin_layout Itemize
są całkowicie bezinwazyjne,
\end_layout

\begin_layout Itemize
mimo wysokiej ceny budowy i instalacji systemu, jego dalsza eksploatacja
 odbywa się niskim kosztem,
\end_layout

\begin_layout Itemize
mają szerokie możliwości konfiguracji i dostosowywania strefy detekcji,
\end_layout

\begin_layout Itemize
mogą być zintegrowane z systemami pomiaru wbudowanymi w jezdnię,
\end_layout

\begin_layout Itemize
w zaawansowanych aplikacjach kamera może dokonywać auto-pozycjonowania w
 celu kompensacji zakłóceń wynikających ze zmiany położenia słońca czy spadku
 jakości oświetlenia,
\end_layout

\begin_layout Itemize
istnieje możliwość udostępniania obrazu przez sieć Internet.
\end_layout

\begin_layout Standard
Największymi wadami metod wizyjnych są:
\end_layout

\begin_layout Itemize
niekorzystny wpływ warunków atmosferycznych: deszcz, śnieg, mgła, zachmurzenie,
\end_layout

\begin_layout Itemize
zjawiska związane ze wzajemnym mijaniem i zasłanianiem się pojazdów,
\end_layout

\begin_layout Itemize
zabrudzenia odkładające się na układzie optycznym.
\end_layout

\begin_layout Standard
Ważnym czynnikiem mającym wpływ na działanie systemu jest sposób montażu
 kamery względem nadzorowanego pasa ruchu.
 Najczęściej umieszcza się kamerę wysoko nad pasem ruchu.
 
\end_layout

\begin_layout Section*
NeuroSoft
\end_layout

\begin_layout Standard
Rozwiązania wrocławskiej firmy NeuroSoft są jednymi z najpopularniejszych
 w kategorii systemów pomiaru i zarządzania ruchem drogowym
\begin_inset CommandInset citation
LatexCommand cite
key "neurosoft"

\end_inset

.
 Firma ta oferuje system o nazwie 
\begin_inset Quotes pld
\end_inset

Neuro Car
\begin_inset Quotes prd
\end_inset

 oraz bardziej rozbudowany 
\begin_inset Quotes pld
\end_inset

Neuro Car 2.0
\begin_inset Quotes prd
\end_inset

.
 Programy te dokonują wideo rejestracji pojazdów, odczytów tablic rejestracyjnyc
h i wstępnej selekcji danych.
 System jest dostarczany w postaci terminala zbudowanego z kamery przemysłowej,
 komputera, karty WLAN, modemu GPRS i zalicza.
 Instalacja systemu jest bardzo prosta: polega na ustawieniu kamery, podpięciu
 zasilania i konfiguracji parametrów.
\end_layout

\begin_layout Standard
Zaletami systemu są:
\end_layout

\begin_layout Itemize
niska cena,
\end_layout

\begin_layout Itemize
możliwość integracji z innymi systemami
\end_layout

\begin_layout Itemize
wysoka skuteczność rozpoznawania,
\end_layout

\begin_layout Itemize
praca w trybie rzeczywistym,
\end_layout

\begin_layout Itemize
odporność na warunki zewnętrzne,
\end_layout

\begin_layout Itemize
rozpoznawanie marki, modelu, koloru,
\end_layout

\begin_layout Itemize
zastosowanie kamer z dużą dynamiką jasności,
\end_layout

\begin_layout Itemize
zdalny dostępu do danych.
\end_layout

\begin_layout Standard
W systemie Neuro Car zastosowano procesory wielordzeniowe, DSP oraz system
 operacyjny Linux, umożliwiając w ten sposób pomiar w stałej ilości 25 klatek
 na sekundę.
 Rozpoznanie, klasyfikacja i generacja opisu trwa nie mniej niż 100 ms.
 Dodatkowo program generuje od 3 do 8 zdjęć dla zidentyfikowanego pojazdu.
 Producent określa skuteczność detekcji na 99%.
\end_layout

\begin_layout Standard
W skład systemu wchodzi wiele dodatkowych aplikacji: 
\end_layout

\begin_layout Itemize
Velocity - pomiar prędkości chwilowej na podstawie serii zdjęć.
\end_layout

\begin_layout Itemize
Dangerous goods - identyfikacja samochodów przewożących materiały niebezpieczne.
\end_layout

\begin_layout Itemize
Classification - klasyfikacja pojazdów wg marki i typu(jednośladowy, osobowy,
 ciężarowy).
\end_layout

\begin_layout Itemize
PDA - aplikacja na platformy mobilne do rozpoznawania numerów tablic rejestracyj
nych.
\end_layout

\begin_layout Itemize
SectionControl - pomiar prędkości średniej na odcinku trasy.
\end_layout

\begin_layout Itemize
RedLight - detekcja przejazdu na czerwonym świetle.
\end_layout

\begin_layout Itemize
City - zarządzanie płatnymi strefami parkowania w miastach, pobieranie opłat.
\end_layout

\begin_layout Itemize
Parking - monitorowanie parkingu, rozliczenie opłat za parkowanie.
\end_layout

\begin_layout Itemize
Monitoring - uniwersalna aplikacja do obserwacji przepływu pojazdów.
\end_layout

\begin_layout Itemize
Base - itegracja z basami mySQL lub postgrSQl.
\end_layout

\begin_layout Itemize
Monitor - oprogramowanie do wizualizacji wyników pomiaru.
\end_layout

\begin_layout Itemize
ScaleGate - system rozpoznawania tablic i ważenia pojazdów, stosowany w
 hurtowniach i magazynach w celu pozyskiwania statystyk o tonażu materiałów
 przychodzący i opuszczających teren zakładu.
\end_layout

\begin_layout Itemize
Neurocar WIM&MIM - automatyczna detekcja pojazdów ponadgabarytowych(przeciążonyc
h oraz za wysokich), których obecność powoduje pogorszenie właściwości nawierzch
ni oraz stwarza zagrożenie na mostach, pod wiaduktami i w tunelach.
\end_layout

\begin_layout Section*
Cat Traffic
\end_layout

\begin_layout Standard
Poznańska firma Cat Traffic zajmuje się systemami stanowiącymi połączenie
 metod wizyjnych z wykorzystaniem płyt warzących
\begin_inset CommandInset citation
LatexCommand cite
key "cattraffic"

\end_inset

.
 Firma wdrożyła kilkanaście stacji warzących na terenie Niemiec, Polski,
 Austrii i Szwajcarii.
 W Polsce CatTraffic wdrożyło na autostradzie A4 systemy pomiaru wagi i
 badania statystki ruchu pojazdów, oraz system czasu przejazdu na 
\begin_inset Quotes pld
\end_inset

Zakopiance
\begin_inset Quotes prd
\end_inset

.
\end_layout

\begin_layout Standard
Rozwiązania oferowane przez firmę:
\end_layout

\begin_layout Itemize
System pomiaru prędkości EasyCount oprócz pomiaru prędkości może badać również
 kierunek jazdy, odległości między pojazdami, i długość pojazdu.
 Przy użyciu dodatkowego osprzętu , EasyCount umożliwia pomiar na dwóch
 pasach ruchu.
 System ma do dyspozycji pamięć, która oferuje miejsce na dane o 800 000
 przejazdach.
 Można dokonywać jego konfiguracji za pomocą modułu GSM.
 Zasilanie zapewniają akumulatory lub baterie słoneczne.
\end_layout

\begin_layout Itemize
Easy Count-Bike- oferuje podobne funkcje co Easy Count, ale w odniesieniu
 do rowerzystów.
\end_layout

\begin_layout Itemize
Licznik AVC - to pętlowy system pomiaru ruchu, umożliwiający zapis, transfer
 i analizę danych.
\end_layout

\begin_layout Itemize
V-REX 1000 - mobilny radar do odczytu tablic i badania struktury ruchu.
\end_layout

\begin_layout Itemize
VIM-VIVER - automatyczna stacja do ważenia pojazdów w ruchu, wraz z pozyskiwanie
 profilu pojazdu i numeru tablic rejestracyjnych.
\end_layout

\begin_layout Itemize
SAW - przenośna waga, umożliwiająca pomiar pojazdów o nacisku do 15 ton.
 Wykorzystywana przez Państwową Inspekcję Transportu Drogowego.
\end_layout

\begin_layout Itemize
ANPR - automatyczne rozpoznawanie tablic, z maksymalnie 8 kamer jednocześnie.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Zastosowane narzędzia.
\end_layout

\begin_layout Standard
Poniższy rozdział zawiera krótki opis języka programowania, w którym została
 zaimplementowana praca inżynierska, zastosowanych zewnętrznych bibliotek
 oraz innych narzędzi użytych przy wykonaniu programu.
 
\end_layout

\begin_layout Section*
Python 
\end_layout

\begin_layout Standard
Algorytm wideo detekcji pojazdów został zaimplementowany w języku programowania
 Python, w wersji 3.4 
\begin_inset CommandInset citation
LatexCommand cite
key "python1"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "python2"

\end_inset

.
 Język ten posiada wiele korzystnych cech, które miały istotny wypływ na
 proces powstawania programu:
\end_layout

\begin_layout Itemize
Jest językiem obiektowym wysokiego poziomu.
 Obiektowość kodu, w przeciwieństwie do takich popularnych języków jak Java
 czy C#, nie jest jednak odgórnie wymuszana przez składnię języka.
 Powoduje to, że w Pythonie można pisać proste liniowe skrypty, służące
 np.
 do testowania programu.
\end_layout

\begin_layout Itemize
Gramatyka języka jest bardzo prosta, podobna do składni języka angielskiego,
 przez co kod jest jasny i zrozumiały.
 Dodatkowo język ten wymusza na programiście stosowanie standardu PEP8,
 co powoduje jednolity i przejrzysty styl kodu w powstającym programie.
\end_layout

\begin_layout Itemize
Posiada bogatą bibliotekę standardową zawierającą moduły do programowania
 sieciowego, pracy z plikami html, xml, json, tworzenia interfejsów gui
 czy przetwarzania wielowątkowego.
\end_layout

\begin_layout Itemize
Jest językiem interpretowanym, więc programy wykonane w tym języku są niezależne
 od platformy i mogą być łatwo przenoszone na inne systemy operacyjne.
\end_layout

\begin_layout Itemize
Ogromna popularność języka Python i szeroka społeczność skupiona wokół niego,
 skutkuje w ogromnej bazie gotowych rozwiązań i poradników.
\end_layout

\begin_layout Section*
OpenCV
\end_layout

\begin_layout Standard
OpenCV jest darmową biblioteką służącą do cyfrowego przetwarzania obrazu.
 Jest ona bezpośrednio zaimplementowana w języku C/C++.
 Dostępna jest na wszystkich systemach operacyjnych stacjonarnych i mobilnych:
 Windows, Linux, MacOS, Android, iOS.
 Biblioteka zapewnia API dla wielu języków, takich jak: Python, Ruby, Java,
 Matlab.
 Została napisana z myślą o programach potrzebujących najwyższej wydajności
 i wykorzystaniu w aplikacjach czasu rzeczywistego.
 Najnowsze wydanie, w wersji 3.0, przynosi optymalizację biblioteki na wielu
 poziomach: algorytmów, wykorzystania wątków oraz rdzeni czy rozkazów dla
 CPU.
 Najwięksi producenci sprzętu komputerowego, tacy jak Intel czy Nvidia,
 także wzięli udział w tworzeniu biblioteki, dostarczając własne niskopoziomowe
 programy do wykonywania operacji na GPU.
\end_layout

\begin_layout Standard
Biblioteka jest podzielona na kilkanaście modułów, dostępnych w postaci
 bibliotek statycznych lub dynamicznych.
 Poniżej zostały omówione najważniejsze moduły, które znalazły zastosowanie
 w implementacji pracy inżynierskiej:
\end_layout

\begin_layout Itemize
core - podstawowe funkcje do działań na tablicach wielowymiarowych,
\end_layout

\begin_layout Itemize
highgui - obsługa graficznego interfejsu użytkownika, wyświetlanie zdjęć
 i wideo ,
\end_layout

\begin_layout Itemize
imgproc - funkcje do przetwarzania obrazu: filtracja, transformacje geometryczne
, konwersje między przestrzeniami barw,
\end_layout

\begin_layout Itemize
imgcodecs - interfejs do odczytu i zapisu zdjęć,
\end_layout

\begin_layout Itemize
videoio - przechwytywanie obrazu wideo,
\end_layout

\begin_layout Itemize
video - analiza obrazu wideo(śledzenie ruchu, wyodrębnianie tła),
\end_layout

\begin_layout Itemize
features2D - znajdywanie krawędzi, dopasowywanie szablonów,
\end_layout

\begin_layout Itemize
objectdect - dopasowywanie i wykrywanie obiektów.
 
\end_layout

\begin_layout Standard
OpenCv znalazło wiele zastosowań w aplikacjach przemysłowych, takich jak:
 inspekcja gotowych produktów w fabrykach, medycyna, bezpieczeństwo, systemy
 wizyjne „wielowymiarowe”, robotyka.
 
\end_layout

\begin_layout Section*
NumPy
\end_layout

\begin_layout Standard
NumPy jest zewnętrzną biblioteką 
\begin_inset Quotes pld
\end_inset

open source
\begin_inset Quotes prd
\end_inset

, służącą do przeprowadzania obliczeń na n-wymiarowych tablicach.
 Jest ona podobna do środowiska Matlab.
 Podstawowa typ tablicy, używany przez bibliotekę znacząco różni się od
 tablicy(listy) samego Pythona: lista jest kontenerem heterogonicznym, mogącym
 dynamicznie zmieniać swój rozmiar, natomiast 
\begin_inset Quotes pld
\end_inset

ndarray
\begin_inset Quotes prd
\end_inset

 jest tablicą homogeniczną o stałym rozmiarze.Rozwiązanie takie zapewnia
 wysoką wydajność obliczeń i możliwość bezpośredniej integracji z plikami
 binarnymi biblioteki napisanymi w języku C/C++.
\end_layout

\begin_layout Section*
SciPy
\end_layout

\begin_layout Standard
Biblioteka SciPy(skrót od 
\begin_inset Quotes pld
\end_inset

Scientific Python
\begin_inset Quotes prd
\end_inset

) jest biblioteką 
\begin_inset Quotes pld
\end_inset

open-source
\begin_inset Quotes prd
\end_inset

 zawierającą funkcje do rozwiązywania zadań optymalizacji, algebry liniowej,
 przetwarzania sygnałów czy rozwiązywania równań różniczkowych.
 Biblioteka pozwala zrealizować większość operacji dostępnych w środowisku
 Matlab.
 
\end_layout

\begin_layout Section*
PyGtk + Glade
\end_layout

\begin_layout Standard
W celu zaprojektowania i stworzenia interfejsu graficznego użytkownika zostało
 wykorzystane PyGtk oraz program Glade.
\end_layout

\begin_layout Standard
PyGtk jest nakładką na bibliotekę Gtk+, pozwalającą na tworzenie graficznego
 interfejsu użytkownika przy użyciu języka Python.
 Znalazła ona zastosowanie w wielu popularnych aplikacjach: BitTorrent,
 Gedit, GIMP.
 Jest częścią linuksowego środowiska graficznego GNOME.
 
\end_layout

\begin_layout Standard
Glade jest programem to projektowania interfejsu graficznego użytkownika
 z wykorzystaniem 
\begin_inset Quotes pld
\end_inset

widgetów
\begin_inset Quotes prd
\end_inset

 z biblioteki Gtk.
 Stworzony projekt okna interfejsu jest zapisywany do pliku xml.
 Spreparowany w ten sposób plik, może być wykorzystany do zbudowania okna
 za pomocą klasy GtkBuilder.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/glade.png
	scale 32

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Widok okna programu Glade
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
Sphinx
\end_layout

\begin_layout Standard
Sphinx jest to narzędzie służące do automatycznej generacji dokumentacji
 programu na podstawie komentarzy zawartych w kodzie.
 Program ten pozwala na tworzenie dokumentacji programów napisanych w Pythonie
 bądź C++.
 Aby dokumentacja mogła zostać wygenerowana, komentarze muszą być zgodne
 ze standardem 
\begin_inset Quotes pld
\end_inset

reStructuredText
\begin_inset Quotes prd
\end_inset

.
 Dokumentacja może być wygenerowana w postaci tekstu, htmla, w formacie
 pdf czy Latex.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/dokumentacja.png
	scale 50
	BoundingBox 0bp 0bp 1350bp 627bp

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Wygenerowana dokumentacja.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
Pycharm 
\end_layout

\begin_layout Standard
Pycharm jest środowiskiem deweloperskim dla języka Python, tworzonym przez
 firmę JetBrains.
 Zapewnia ono szereg przydatnych funkcji, takich jak: podpowiadanie składni,
 detekcję błędów, proponowanie poprawek i rozbudowany debuger.
 Działa zgodnie, ze wszystkimi popularnymi implementacjami języka Python:
 CPython, IronPython, Jython.
 Środowisko oferuje wsparcie dla innych technologi, np.
 Html5, Css3, JavaScript, Angular.js.
 Za pomocą Pycharma programista może korzystać z frameworków webowych takich
 jak Django czy Flask.
 Środowisko wspiera również systemy kontroli wersji(Git, SVN), posiada wsparcie
 dla narzędzi do pracy z bazami SQL oraz umożliwia zdalne edytowanie kodu
 w oparciu o protokół SSH.
 Firma JetBrains udostępnia 3 wersje IDE: profesjonalną(płatną), edukacyjną(dla
 studentów) oraz 
\begin_inset Quotes pld
\end_inset

społecznościową
\begin_inset Quotes prd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Opis programu
\end_layout

\begin_layout Standard
Poniższy rozdział opisuje interfejs i sposób działania zaimplementowanego
 programu.
\end_layout

\begin_layout Section*
Instalacja 
\end_layout

\begin_layout Standard
Poniżej został opisany sposób instalacji programu oraz wymaganych bibliotek
 na systemie Linux.
 
\end_layout

\begin_layout Enumerate
Wchodzimy na stronę, i pobieramy najnowszą wersję programu:
\begin_inset listings
lstparams "basicstyle={\footnotesize},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

https://github.com/artven/videodetection/releases/latest
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Alternatywą do kroku 1.
 jest sklonowanie całego repozytorium: 
\begin_inset listings
lstparams "basicstyle={\footnotesize},tabsize=4"
inline false
status open

\begin_layout Plain Layout

git clone https://github.com/artven/videodetection.git
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Przechodzimy do folderu zawierające pobrany plik: 
\begin_inset listings
lstparams "basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

cd ~/Pobrane
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Rozpakowujemy i kopiujemy program do katalogu domowego: 
\begin_inset listings
lstparams "basicstyle={\footnotesize},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

unzip videodetection.v1.2.zip  
\end_layout

\begin_layout Plain Layout

mkdir ~/videodetection
\end_layout

\begin_layout Plain Layout

cp -r 'videodetection v1.2'/* ~/videodetection/ 
\end_layout

\begin_layout Plain Layout

cd ~/videodetection
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Instalujemy zależności dla biblioteki OpenCV: 
\begin_inset listings
lstparams "basicstyle={\footnotesize},breaklines=true,showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade
 && sudo apt-get autoremove
\end_layout

\begin_layout Plain Layout

sudo apt-get install build-essential cmake qt5-default libvtk6-dev zlib1g-dev
 libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev
 libgdal-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev
 libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-
dev libopencore-amrwb-dev libv4l-dev libxine2-dev libtbb-dev libeigen3-dev
 python-dev python-tk python-numpy python3-dev python3-tk python3-numpy
 ant default-jdk doxygen
\end_layout

\begin_layout Plain Layout

	
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pobieramy bibliotekę z oficjalnej strony:
\begin_inset listings
lstparams "basicstyle={\footnotesize},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

cd /tmp
\end_layout

\begin_layout Plain Layout

wget https://github.com/Itseez/opencv/archive/3.1.0.zip
\end_layout

\begin_layout Plain Layout

unzip 3.1.0.zip
\end_layout

\begin_layout Plain Layout

cd opencv-3.1.0/ 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Kompilujemy i instalujemy OpenCV: 
\begin_inset listings
lstparams "basicstyle={\footnotesize},breaklines=true,showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

mkdir build
\end_layout

\begin_layout Plain Layout

cd build
\end_layout

\begin_layout Plain Layout

cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON
 -DWITH_XINE=ON -DBUILD_EXAMPLES=ON ..
\end_layout

\begin_layout Plain Layout

make -j4
\end_layout

\begin_layout Plain Layout

sudo make install
\end_layout

\begin_layout Plain Layout

sudo ldconfig
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Instalujemy sklearn: 
\begin_inset listings
lstparams "basicstyle={\footnotesize},showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

pip3 install -U scikit-learn
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Struktura programu
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/struktura_programu.png
	scale 60

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Widok struktury programu
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Program został podzielony na następujące pliki oraz foldery:
\end_layout

\begin_layout Itemize
data - folder do którego program zapisuje dane o wykrytych pojazdach do
 baz danych SQLite,
\end_layout

\begin_layout Itemize
doc - dokumentacja programu w formacie .html wygenerowana przy użyciu narzędzia
 Sphinx,
\end_layout

\begin_layout Itemize
gui - pliki w formacie .glade używane do wyświetlania interfejsu graficznego
 użytkownika,
\end_layout

\begin_layout Itemize
images - zdjęcia wykrytych samochodów, 
\end_layout

\begin_layout Itemize
samples - przykładowe próbki nagrań ruchu samochodów,
\end_layout

\begin_layout Itemize
src - pliki źródłowe programu,
\end_layout

\begin_layout Itemize
videos - zapisane przez program wyniki analizy w postaci plików wideo,
\end_layout

\begin_layout Itemize
config.json - plik konfiguracyjny programu, zawiera parametry algorytmów
 oraz opcje dotyczące prezentacji wyników programu,
\end_layout

\begin_layout Itemize
data.log - plik gdzie są odkładane komunikaty diagnostyczne programu,
\end_layout

\begin_layout Itemize
readme.txt - plik tekstowy zawierający informacje o programie,
\end_layout

\begin_layout Itemize
run.py - skrypt uruchamiający program.
\end_layout

\begin_layout Section*
Interfejs 
\end_layout

\begin_layout Standard
Po uruchomieniu programu skryptem z pliku run.py pojawia się główne okno
 programu.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/widok_programu.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Główne okno programu
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
W skład głównego okna wchodzi górne menu, obszar odtwarzania pliku wideo,
 lista przetwarzanych plików, lista wyników, menu odtwarzania i pasek informując
y o postępie przetwarzania.
 
\end_layout

\begin_layout Subsubsection*
Opis oznaczeń na obrazie
\end_layout

\begin_layout Standard
Podczas przetwarzania plików wideo odbywa się równoczesne ich wyświetlanie
 z naniesionymi przez program oznaczeniami.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/oznaczenia.jpg
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Oznaczenia na obrazie
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Pojazdy są oznaczane zielonym prostokątem.
 Prostokąt ten otacza rejon obiektu wykrytego po wyodrębnieniu tła.
 Zielony krzyżyk jest umiejscowiony w środku ciężkości obiektu.
\end_layout

\begin_layout Itemize
Czerwony prostokąt stanowi obszar 
\begin_inset Quotes pld
\end_inset

czułości
\begin_inset Quotes prd
\end_inset

 kamery.
 Wszystkie obiekty, których środki ciężkości znajdują się po za tym obszarem
 są ignorowane przez program.
 
\end_layout

\begin_layout Itemize
Dwie różowe pionowe linie służą do oznaczenia odcinka, którego długość stanowi
 podstawę do wyliczenia przelicznika pikseli na obrazie na metry.
 Pozwala to określać prędkość i wymiary samochodów.
\end_layout

\begin_layout Standard
Wyświetlanie oznaczeń można włączać/wyłączać w opcjach programu, które zostały
 opisane w dalszej części pracy.
\end_layout

\begin_layout Subsubsection*
Funkcje elementów głównego menu:
\end_layout

\begin_layout Itemize
\begin_inset Quotes pld
\end_inset

Dodaj wideo
\begin_inset Quotes prd
\end_inset

 - otwiera poniższe okno dialogowe, umożliwiające wybór jednego bądź większej
 ilości plików wideo do analizy.
 Wybrane pliki są dodawane do listy po prawej stronie.
 Użytkownik może usuwać pliki z listy po przez kliknięcie prawym klawiszem
 myszy na nazwie pliku.
 Skrót klawiszowy Ctrl+q.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/wybor_pliku.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Okno wyboru plików
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes pld
\end_inset

Dane
\begin_inset Quotes prd
\end_inset

 - umożliwia wybranie bazy danych i podejrzenie jej zawartości.
 W bazie danych wygenerowanej przez program znajduje się jedna tabela 
\begin_inset Quotes pld
\end_inset

cars
\begin_inset Quotes prd
\end_inset

, w której znajdują się pola 
\begin_inset Quotes pld
\end_inset

id
\begin_inset Quotes prd
\end_inset

, 
\begin_inset Quotes pld
\end_inset

width
\begin_inset Quotes prd
\end_inset

, 
\begin_inset Quotes pld
\end_inset

height
\begin_inset Quotes prd
\end_inset

, 
\begin_inset Quotes pld
\end_inset

area
\begin_inset Quotes prd
\end_inset

, 
\begin_inset Quotes pld
\end_inset

speed
\begin_inset Quotes prd
\end_inset

, 
\begin_inset Quotes pld
\end_inset

file
\begin_inset Quotes prd
\end_inset

 i 
\begin_inset Quotes pld
\end_inset

date
\begin_inset Quotes prd
\end_inset

.
 Pole 
\begin_inset Quotes pld
\end_inset

file
\begin_inset Quotes prd
\end_inset

 umożliwia identyfikację przetwarzanego pliku w celu weryfikacji wyników.
 Pole 
\begin_inset Quotes pld
\end_inset

date
\begin_inset Quotes prd
\end_inset

 została w umieszczone w celu przyszłej implementacji przetwarzania obrazu
 w czasie rzeczywistym.
 Skrót klawiszowy Ctrl+w.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/baza_danych.png
	scale 60

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Podgląd bazy danych
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes pld
\end_inset

Obrazy
\begin_inset Quotes prd
\end_inset

 - włącza przeglądarkę zapisanych przez program zdjęć pojazdów.
 Skrót klawiszowy Ctrl+e.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/przeladanie_obrazow.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Widok przeglądania obrazów.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Przeglądanie obrazów odbywa się po przez wywołanie domyślnego programu do
 otwierania obrazów na systemie Linux(na dystrybucji Ubuntu jest to program
 
\begin_inset Quotes pld
\end_inset

eog
\begin_inset Quotes prd
\end_inset

).
 Na wygenerowanym przez program obrazie wynikowym został umieszczony pojazd
 wjeżdżający w obszar detekcji(w górnej części) oraz pojazd opuszczający
 ten obszar(na dole obrazu).
 Dodatkowo program wypisuje na obrazie informację, w postaci paska kolorów
 w lewym górnym rogu oraz podpisu u dołu zdjęcia.
\end_layout

\begin_layout Itemize
\begin_inset Quotes pld
\end_inset

Wyczyść
\begin_inset Quotes prd
\end_inset

 - usuwa zdjęcia, filmy, bazy danych oraz wyniki klasyfikacji.
 Przed wykonaniem operacji pojawia się okno dialogowe z prośbą o potwierdzenie
 usunięcia danych.
 Pozwala to uniknąć przypadkowego usunięcia danych.
 Skrót klawiszowy Ctrl+r.
\end_layout

\begin_layout Itemize
\begin_inset Quotes pld
\end_inset

Ustawienia
\begin_inset Quotes prd
\end_inset

 -pokazuje okno ustawień programu.
 Opcje programu zostały opisane w następnym podrozdziale programu.
 Skrót klawiszowy Ctrl+t.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/ustawienia.png
	scale 60

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Okno ustawień programu.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Miejsce pomiaru prędkości 1/2 - wartość tego pola służy do oznaczenia zmierzoneg
o w rzeczywistości odcinka.
\end_layout

\begin_layout Itemize
Zmierzona odległość - długość zmierzonego odcinka.
\end_layout

\begin_layout Itemize
Liczba szukanych kolorów - określa liczbę kolorów jaką program ma rozpoznać
 na obiekcie.
\end_layout

\begin_layout Itemize
Odległość strefy od krawędzi w pionie/poziomie- określa ona odległość(wyrażoną
 w pikselach) o jaką obszar wykrywania jest odsunięty od krawędzi obrazu.
\end_layout

\begin_layout Itemize
Minimalna wielkość obiektu - obiekt o mniejszej wartości są ignorowane na
 etapie detekcji.
\end_layout

\begin_layout Itemize
Obszar detekcji - flaga rysowania czerwonego prostokątem ekran będący strefą
 detekcji kamery.
\end_layout

\begin_layout Itemize
Pomiar prędkości- flaga rysowania pionowych linii do pomiaru odległości.
\end_layout

\begin_layout Itemize
Samochody - flaga obrysowywania zielonym prostokątem pojazdów.
\end_layout

\begin_layout Itemize
Prędkość - podpisywanie obrazu zidentyfikowanego pojazdu informacją o prędkości.
\end_layout

\begin_layout Itemize
Rozmiar - podpisuje obraz zidentyfikowanego pojazdu informacją rozmiarze:
 długości, wysokości, polu powierzchni bocznej.
\end_layout

\begin_layout Itemize
Pasek kolorów - rysuje na obrazie zidentyfikowanego pojazdu pasek informujący
 o kolorze tego pojazdu.
\end_layout

\begin_layout Itemize
Kontur pojazdu - rysuje niebieski kontur pojazdu na obrazie wynikowym.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Quotes pld
\end_inset

Dokumentacja
\begin_inset Quotes prd
\end_inset

 - uruchamia w domyślnej przeglądarce systemowej stronę główną dokumentacji.
 Skrót klawiszowy Ctrl+y.
\end_layout

\begin_layout Itemize
\begin_inset Quotes pld
\end_inset

O programie
\begin_inset Quotes prd
\end_inset

 - uruchamia okienko dialogowe pokazujące krótką informację o programie.
 Skrót klawiszowym Ctrl+u.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/o_programie.png
	scale 60

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Informacja o programie
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Quotes pld
\end_inset

Zakończ
\begin_inset Quotes prd
\end_inset

 - wyłącza program.
 Skrót klawiszowy Ctrl+z.
\end_layout

\begin_layout Subsubsection*
Funkcje menu odtwarzania: 
\end_layout

\begin_layout Itemize
Rozpoczęcie przetwarzania.
 Skrót klawiszowy a.
\end_layout

\begin_layout Itemize
Pauza.
 Skrót klawiszowy s.
\end_layout

\begin_layout Itemize
Rozpoczęcie odtwarzania od nowa.
 Skrót klawiszowy d.
\end_layout

\begin_layout Itemize
Stop.
 Skrót klawiszowy f.
\end_layout

\begin_layout Itemize
Zapisz - pozwala zapisać obecną klatę obrazu do pliku.
 Skrót klawiszowy g.
\end_layout

\begin_layout Itemize
Włączenie/wyłączenie nagrywania rezultatu przetwarzania do pliku video.
\end_layout

\begin_layout Itemize
Włączenie/wyłączenie algorytmu - gdy przycisk nie jest wciśnięty program
 wykonuje jedynie detekcję obiektów, pomija zaś śledzenie, analizę i zapis
 rezultatów.
\end_layout

\begin_layout Itemize
Włączenie/wyłącznie pokazywania maski - binarnego obrazu powstałego wy wyniku
 wycięcia tła.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Algorytm detekcji i identyfikacji cech pojazdów.
\end_layout

\begin_layout Standard
W tym rozdziale zostały opisane kolejne etapy zaimplementowanego algorytmu.
 Składa się on z trzech etapów: detekcji obiektów, śledzenia pojazdów i
 klasyfikacji.
\end_layout

\begin_layout Section*
Kalibracja programu
\end_layout

\begin_layout Standard
Przed rozpoczęciem analizy próbek wideo należy dobrać odpowiednie ustawienia.
 W tym celu istnieje możliwość wyłączenia przetwarzania obrazu przez algorytm,
 co znacząco polepsza wydajność programu na tym etapie.
 Pierwszym krokiem konfiguracji programu, powinno być dostosowanie rozmiaru
 strefy czułości pojazdu.
 Należy przy tym stosować się do następujących zasad:
\end_layout

\begin_layout Enumerate
Stefa czułości powinna być tak dobrana aby obejmowała obszar obrazu, będący
 faktycznym rejonem przejazdu pojazdów.
 Wybranie zbyt dużej strefy, obejmującej np.
 pobocze, tło, etc, może powodować pojawienie się błędnych odczytów spowodowanyc
h rejestracją odbić światła i cieni jako poruszających się pojazdów.
\end_layout

\begin_layout Enumerate
Strefa powinna być na tyle wąska aby pojazdy były wykrywane dopiero gdy
 znajdą się całkowicie w kadrze.
 W przeciwnym razie tracona jest dokładność pomiaru prędkości.
\end_layout

\begin_layout Standard
Kolejnym etapem jest wprowadzenie granic pomiaru prędkości.
 Przed nagraniem danych z ruchu drogowego operator powinien dokonać ręcznego
 pomiaru odległości, następnie w trakcie konfiguracji programu oznaczyć
 zmierzony odcinek granicami pomiaru i podać zmierzoną wartość.
 Wartość ta stanowi podstawę przelicznika pixeli na obrazie na rzeczywistą
 odległość.
\end_layout

\begin_layout Standard
Ostatnim etapem powinno być dobranie minimalnego rozmiaru obiektu.
 Jest to ważna opcja, kluczowa podczas selekcji obiektów na obrazie.
 Umożliwia odrzucenie obiektów bodących zakłóceniami.
 Minimalna wielkość obiektu powinna być dobrana z uwzględnieniem odległości
 urządzenia nagrywającego od jezdni - im urządzenie było bliżej szosy, dolna
 granica powinna być większa.
 
\end_layout

\begin_layout Standard
W programie, na chwilę obecną, nie ma możliwości ustawienia przez użytkownika
 górnej granicy obiektu.
 Została ona ustalona jako stała wartość równa połowie liczby pikseli klatki
 obrazu.
\end_layout

\begin_layout Section*
Detekcja obiektów
\end_layout

\begin_layout Standard
Pierwszym właściwym krokiem algorytmu jest analiza pojedynczej klatki obrazu,
 znalezienie grup pikseli mogących być obiektami i i ich selekcja.
 
\end_layout

\begin_layout Standard
Pobierane z pliku wideo klatki obrazu są poddawane operacji wyodrębniania
 tła, która oddziela niezmieniające się, nieruchome elementy tła od poruszającyc
h się elementów na pierwszym planie.
 Operacja ta została zaimplementowana w bibliotece OpenCV pod postacią klas
 BackgroundSubtractorMOG, BackgroundSubtractorMOG2 oraz BackgroundSubtractorGMG.
\end_layout

\begin_layout Description
BackgroundSubtractorMOG
\begin_inset CommandInset citation
LatexCommand cite
key "artykul_mog"

\end_inset

 - dokonuje dla każdego piksela obrazu oszacowania czasu przez jaki jego
 kolor pozostaje niezmienny.
 Jako elementy tła wybierane są te punkty, których wartości nie zmieniają
 się wcale lub zmieniają się w niewielkim stopniu.
 Klasa ta została określona w bibliotece jako przestarzała, nie zaleca się
 jej stosowania.
\end_layout

\begin_layout Description
BackgroundSubtractorMOG2
\begin_inset CommandInset citation
LatexCommand cite
key "artykul_mog2_1"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "artykul_mog2_2"

\end_inset

 - działa na podobnej zasadzie co powyższa klasa.
 Dodatkowo dla każdego piksela obrazu wybierany jest inny model przybliżenia
 czasu niezmienności.
\end_layout

\begin_layout Description
BackgroundSubtractorGMG
\begin_inset CommandInset citation
LatexCommand cite
key "GMG"

\end_inset

 - na podstawie pierwszych 120 klatek obrazu dokonuje oceny prawdopodobieństwa,
 który region obrazu może zostać uznany jako tło.
 Ocena ta ulega zmianie, pod wpływem następnych klatek obrazu.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/substrakcja.png
	scale 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Porównanie metod wyznaczania tła.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na powyższym obrazie zostało zaprezentowanie porównanie metody MOG2(u góry)
 z metodą GMG(na dole) na przykładowym nagraniu przejazdu samochodu.
 Rezultaty nie odbiegają od siebie znacząco - można zauważyć, że GMG generuje
 odrobinę więcej zakłóceń.
 Metoda ta ma jednak ogromną zaletę - potrafi wyodrębniać cienie obiektów,
 co pozwala na ich usuwanie na etapie filtracji.
 W programie zdecydowano się na użycie tej metody.
\end_layout

\begin_layout Standard
Następnym etapem jest filtracja uzyskanego obrazu binarnego.
 Odbywa się ona po przez wykonanie na obrazie kolejno: otwarcia, mediany
 oraz dylatacji
\begin_inset CommandInset citation
LatexCommand cite
key "tadeusiewicz-systemy-wizyjne"

\end_inset

.
 
\end_layout

\begin_layout Description
Binaryzacja to jedno z podstawowych przekształceń obrazu.
 Polega na zamianie wartości widocznych na obrazie przedstawionym w skali
 szarości na poziomy 0 i 1(ewentualnie 0 i 255).
 Kluczowym elementem tego algorytmu jest dobór progu.
 Stosuje się binaryzację z pojedynczym progiem, odwrotną, z progiem podwójnym
 i wielokryteriową.
 Uzyskanie odpowiedniego obrazu binarnego stanowi pierwszy etap algorytmów
 detekcji obiektów i rozpoznawania kształtów.
\end_layout

\begin_layout Description
Mediana jest operacją kontekstową - dla przeprowadzenia wyliczenia wartości
 transformacji dla konkretnego piksela obrazu potrzebna jest informacja
 o otoczeniu, nazwanym również oknem.
 Charakterystyczną cechą mediany jest to, że równocześnie usuwając zakłócenia
 nie powoduje uszkodzenia krawędzi obrazu.
 Działanie metody oparte jest, jak wskazuje nazwa, na matematycznej operacji
 mediany: z uporządkowanego ciągu wartości pikseli w oknie wybierana jest
 wartość środkowa, która jest wynikiem transformacji dla elementu centralnego
 okna.
 Daje to szereg korzyści: wartości ekstremalne są odrzucane przez filtr,
 a operacja nie wprowadza do obrazu nowych wartości, ponieważ operuje wyłącznie
 na wartościach już istniejących w obrazie.
 Negatywnym skutkiem zastosowania mediany jest pogorszenie jakości zaokrąglonych
 obszarów.
 Zjawisko to jest coraz bardziej widoczne wraz ze wzrostem rozmiaru obszaru
 przetwarzania.
 Wyliczenie wartości mediany jest kosztowne obliczeniowo, gdyż wymaga dla
 każdego punktu obrazu posortowania wartości elementów okna.
\end_layout

\begin_layout Description
Erozja należy do klasy operacji przetwarzania obrazu nazwanej przekształceniami
 morfologicznymi.
 Opierają się one na zdefiniowaniu jądra transformacji(w postaci siatki
 eliptycznej, kwadratowej, etc), które zawiera warunki dotyczące wartości
 pikseli obrazu.
 Operacja morfologiczna polega na przyłożeniu elementu strukturalnego do
 każdego punktu obrazu i transformacji tych pikseli, które spełniają warunek.
 Własność ta powoduje, że w przeciwieństwie do innych metod(punktowych,
 kontekstowych) przekształceniu ulega tylko fragment obrazu.
 Sama erozja jest zdefiniowana jako filtr minimalny: każdemu elementowi
 przypisywana jest minimalna wartość z pośród sąsiednich pikseli.
 Na obrazie binarnym jej działanie objawia się pomniejszeniem pola powierzchni
 
\begin_inset Quotes pld
\end_inset

skupionych
\begin_inset Quotes prd
\end_inset

 obszarów oraz usunięciem zakłóceń w postaci cienkich 
\begin_inset Quotes pld
\end_inset

włosów
\begin_inset Quotes prd
\end_inset

.
 Może zostać wykorzystana do odseparowania od siebie obszarów.
\end_layout

\begin_layout Description
Dylatacja jest również operacją morfologiczną, przeciwną do erozji, gdyż
 działa jak filtr maksymalny.
 Powoduje usunięcie zakłóceń w postaci 
\begin_inset Quotes pld
\end_inset

dziur
\begin_inset Quotes prd
\end_inset

 i zagłębień wewnątrz obszarów.
 Małe, położone blisko siebie obszary zostają połączone w jeden większy
 rejon.
\end_layout

\begin_layout Description
Otwarcie jest kombinacją powyższych dwóch metod: najpierw na obrazie wykonuję
 się erozje, a potem dylatację.
 W ten sposób zapobiega się zmianom pola powierzchni obiektów.
 Na obrazie binarnym powoduje usunięcie drobnych wklęsłości i rozłączenie
 niektórych obiektów.
 Negatywną cechą tej operacji jest zamazywanie i zniekształcanie obrazu.
\end_layout

\begin_layout Standard
Zastosowana metodologia filtracji i selekcji zapewnia że program skutecznie
 wykrywa obiekty będące pojazdami oraz odrzuca większość zakłóceń.
 Na poniższym obrazie zaprezentowano rezultat - kolejno od góry znajduje
 się obraz oryginalny, obraz po wykryciu tła oraz obraz po filtracji.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/filtracja.png
	scale 85

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Rezultat filtracji.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na przefiltrowanym obrazie jest oznaczane są unikalnymi wartościami rozłączne
 elementy pierwszego planu.
 Każdy znaleziony obiekt jest poddawany ocenie względem kryterium rozmiaru.
 Jeżeli ocena jest pozytywna program dokonuje opisu rejonu elementu prostokątem
 i informację o położeniu lewego-górnego wierzchołka prostokąta, wysokości,
 długości i środku ciężkości obiektu zapisuje do listy rezultatów detekcji.
 
\end_layout

\begin_layout Section*
Śledzenie pojazdów
\end_layout

\begin_layout Standard
Śledzenie pojazdów polega na analizie informacji o obiektach znajdujących
 się na kolejnych klatkach obrazu.
 Klasa odpowiedzialna za śledzenie dokonuje przeglądu wszystkich obiektów,
 pod kątem położenia w rejonie czułości kamery według poniższego algorytmu:
\end_layout

\begin_layout Enumerate
Sprawdź czy obiekt znajduje się w rejonie czułości kamery.
 Jeżeli nie idź do punktu 5.
\end_layout

\begin_layout Enumerate
Sprawdź czy obiekt znajduje się blisko lewej bądź prawej krawędzi obrazu.
 Jeśli nie, idź do punktu 5.
\end_layout

\begin_layout Enumerate
Jeżeli lista obiektów przy przeciwnej krawędzi jest pusta, dodaj obiekt
 z aktualną klatką obrazu do listy tej strony.
 Sytuacja ta oznacza, że pojazd pojawił się w obszarze czułości kamery.
\end_layout

\begin_layout Enumerate
Jeżeli lista obiektów przy przeciwnej krawędzi rejonu detekcji nie jest
 pusta, pobierz pierwszą informację z tej listy i przekaż informacje o obiektach
 z obu stron dalej.
 Sytuacja ta oznacza, że pojazd opuszcza rejon wykrywania.
\end_layout

\begin_layout Enumerate
Weź następny obiekt do analizy.
\end_layout

\begin_layout Standard
W celu zabezpieczenia przed kilkukrotnym wykryciem i zapisaniem tego samego
 przejazdu, po wykryciu pojawienia się pojazdu lub opuszczenia przez niego
 obszaru, wykrywanie zostaje zablokowane aż do momentu opuszczenia otoczenia
 krawędzi rejonu detekcji.
\end_layout

\begin_layout Standard
Ocena obecności w otoczeniu krawędzi odbywa się po przez obliczenie odległości
 środka ciężkości obiektu od krawędzi rejonu.
 Jeżeli ta odległość jest mniejsza niż 50 pikseli, obiekt jest oznaczany
 jako znajdujący się w otoczeniu krawędzi.
\end_layout

\begin_layout Subsubsection*
Śledzenie przykładowego przejazdu pojazdu
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pusta jezdnia.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/przyklad/1.jpg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Nowy pojazd w kadrze.
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
W kadrze kamery pojawia się pojazd, ale jest po za rejonem detekcji, więc
 jest ignorowany przez program.
 Odpowiada to krokowi 1 i 2 przedstawionego wcześniej algorytmu.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/przyklad/2.jpg
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Wykrycie pojazdu.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pojazd wchodzi w obszar czułości kamery.
 Program zapisuje aktualną klatkę obrazu, jej numer oraz współrzędne środka
 ciężkości pojazdu.
 Odpowiada to krokowi 3 algorytmu.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/przyklad/3.jpg
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Pojazd w obszarze detekcji.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Środek ciężkości samochodu znajduje się w obszarze wykrywania.
 Program śledzi jego ruch, aż zbliży się do przeciwnego boku prostokąta.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/przyklad/4.jpg
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Opuszczenie rejonu detekcji.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Samochód jest w otoczeniu drugiej krawędzi prostokąta.
 Program, podobnie jak na drugim obrazie, pobiera klatkę obrazu, jej numer
 i współrzędne środka ciężkości i przesyła dane do klasy zajmującej się
 obliczaniem parametrów.
 Jest to krok 4 algorytmu.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/przyklad/5.jpg
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Opuszczenie kadru.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Przejazd samochodu został wykryty.
 Pojazd opuścił rejon pomiaru i nie jest już interesujący dla programu.
\end_layout

\begin_layout Section*
Identyfikacja
\end_layout

\begin_layout Standard
Oprogramowanie ma dostarczyć danych o rozmiarze pojazdu, kolorze i prędkości.
\end_layout

\begin_layout Standard
Na wyznaczenie rozmiaru składa się obliczenie jego długości, wysokości i
 pola powierzchni bocznej karoserii.
 Wysokość i długość są wyliczane jako długość i wysokość zielonego prostokąta
 otaczającego obiekt razy przelicznik metrów na piksele, natomiast pole
 powierzchni bocznej to pole konturu samochodu razy przelicznik do kwadratu.
\end_layout

\begin_layout Standard
W celu wykrycia koloru, program wyszukuje w prostokącie otaczającym pojazd
 K dominujących kolorów i wybiera ten największy.
 Funkcja wyboru kolorów została zaimplementowana z wykorzystaniem klasy
 KMeans
\begin_inset CommandInset citation
LatexCommand cite
key "KMeans"

\end_inset

 z pakietu scikit-learn
\begin_inset CommandInset citation
LatexCommand cite
key "scikit-learn"

\end_inset

.
 Zasada działania tego algorytmu jest następująca: podziel zbiór 
\emph on
N
\emph default
 próbek ze zbioru 
\emph on
X
\emph default
 na 
\emph on
K
\emph default
 grup, z których każda jest charakteryzowane przez wartość 
\emph on
u
\emph default
, tak aby zminimalizować sumę kwadratów różnic w każdej grupie.
 Poniższy obraz przedstawia rezultat użycia tego algorytmu: po lewej znajduje
 się obraz oryginalny, po prawej stronie obraz zredukowany do 4 kolorów.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/kmean.jpg
	scale 45

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Przykład działania algorytmu K-means.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aby zidentyfikować prędkość pojazdu program pobiera różnicę klatek między
 pojawieniem się a opuszczeniem pola detekcji przez samochód, następnie
 znając liczbę fps na sekundę określa czas między zajściem tych zdarzeń.
 Kolejnym krokiem jest wyliczenie różnicy między środkami ciężkości pojazdu
 w obu miejscach.
 Znając różnicę w czasie, odległość w pikselach oraz przelicznik metrów
 na piksele program może wyliczyć prędkość.
\end_layout

\begin_layout Standard
Wszystkie wyniki identyfikacji parametrów są pakowane do struktury danych,
 zwanej w języku Python słownikiem, i przesyłane do modułu zajmującego się
 zapisywaniem wyników do obrazów i baz danych.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Analiza wyników 
\end_layout

\begin_layout Standard
Wyniki działania programu zostały porównane z danymi pochodzącymi z pomiaru
 za pomocą pętli indukcyjnych.
 Dane te miały postać plików *.avi oraz plików tekstowych w formacie 
\begin_inset Quotes pld
\end_inset

kolumnowym
\begin_inset Quotes prd
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pole
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Opis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postać lub jednostka
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RRRR-MM-DD
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Godzina
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HH:MM:SS
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Temperatura
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
st.
 C.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Prędkość
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
km/h
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Długość
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
m
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Liczba osi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Odległość między osiami
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13-19
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Naciski osi z czujnika nr 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20-26
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Naciski osi z czujnika nr 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Format pliku wejściowego.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Plik avi był powiązany z wpisem w pliku tekstowym(nazwą pliku była godzina
 pomiaru, z dokładnością do kilku sekund).
\end_layout

\begin_layout Subsubsection*
Skrypt przeprowadzający testy
\end_layout

\begin_layout Standard
W celu automatyzacji testowania został napisany skrypt w języku Python.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,basicstyle={\footnotesize},tabsize=4"
inline false
status open

\begin_layout Plain Layout

from os import listdir 
\end_layout

\begin_layout Plain Layout

from datetime import datetime 
\end_layout

\begin_layout Plain Layout

from numpy import mean, median
\end_layout

\begin_layout Plain Layout

from src.video import VideoReader, Frame 
\end_layout

\begin_layout Plain Layout

from src.alg import Algorithm 
\end_layout

\begin_layout Plain Layout

from src.config import Configuration 
\end_layout

\begin_layout Plain Layout

from src.logs import Database, ImageSaver, Logger 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pierwszy etapem w skrypcie jest zaimportowanie potrzebnych bibliotek i klas:
\end_layout

\begin_layout Description
os - moduł biblioteki standardowej, zapewniający podstawowe funkcje zależne
 od architektury systemu operacyjnego(otwieranie/czytanie plików, poruszanie
 się po hierarchii katalogów, manipulowanie zmiennymi systemowi)
\end_layout

\begin_layout Description
datetime - moduł biblioteki standardowej, służący do manipulacji datą, czasem,
 strefą czasową, umożliwiający także odmierzanie czasu.
\end_layout

\begin_layout Description
numpy - zewnętrzna biblioteka do operacji numerycznych
\end_layout

\begin_layout Description
VideoReader - klasą do odczytu danych z pliku wideo, zapewniająca dostęp
 do właściwości pliku.
\end_layout

\begin_layout Description
Frame - klasa opakowująca klatki obrazu pobrane z pliku.
\end_layout

\begin_layout Description
Algorithm - klasa reprezentująca algorytm programu.
\end_layout

\begin_layout Description
Configuration - klasa pozwalająca zmieniać, przywracać i zapisywać ustawienia
 programu.
\end_layout

\begin_layout Description
Database - klasa zapisująca wyniki do bazy danych.
\end_layout

\begin_layout Description
ImageSaver - reprezentacja rezultatów w postaci obrazów.
\end_layout

\begin_layout Description
Logger - zapisywanie komunikatów diagnostycznych do pliku tekstowego.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,basicstyle={\footnotesize},tabsize=4"
inline false
status open

\begin_layout Plain Layout

input_file = open("input.txt")
\end_layout

\begin_layout Plain Layout

output_file = open("output.txt", "w")
\end_layout

\begin_layout Plain Layout

folder = "/media/Dane/Dropbox/Studia/IV rok/inżynierka/Dane_AVI" 
\end_layout

\begin_layout Plain Layout

avi_files = listdir("/media/Dane/Dropbox/Studia/IV rok/inżynierka/Dane_AVI")
\end_layout

\begin_layout Plain Layout

db = Database() 
\end_layout

\begin_layout Plain Layout

img_saver = ImageSaver()
\end_layout

\begin_layout Plain Layout

Logger.start() 
\end_layout

\begin_layout Plain Layout

Configuration.load_config()
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Następnie skrypt otwiera plik z wynikami pomiarów, pobiera listę nagrań,
 tworzył obiekty do zapisu danych i ładuje ustawienia.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,basicstyle={\footnotesize},tabsize=4"
inline false
status open

\begin_layout Plain Layout

def test_sigle_file(file):        
\end_layout

\begin_layout Plain Layout

	Algorithm.reset()     
\end_layout

\begin_layout Plain Layout

	input_video = VideoReader(file)     
\end_layout

\begin_layout Plain Layout

	result = []
\end_layout

\begin_layout Plain Layout

    while 1:         
\end_layout

\begin_layout Plain Layout

		frame = Frame(input_video)
\end_layout

\begin_layout Plain Layout

        if not input_video.is_good():
\end_layout

\begin_layout Plain Layout

            break
\end_layout

\begin_layout Plain Layout

        frame = Algorithm.resize(frame)         
\end_layout

\begin_layout Plain Layout

		frame, mask, records = Algorithm.perform(frame, db, img_saver, True)
\end_layout

\begin_layout Plain Layout

		if records is not None and len(records) > 0:             
\end_layout

\begin_layout Plain Layout

			for rec in records:
\end_layout

\begin_layout Plain Layout

				r1 = round(rec['width'], 2)
\end_layout

\begin_layout Plain Layout

				r2 = round(rec["speed"], 2)                
\end_layout

\begin_layout Plain Layout

				result.append((r1, r2))
\end_layout

\begin_layout Plain Layout

    return result
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na listingu powyżej znajduje się funkcja, wykonywana w głównej pętli programu.
 Kolejne klatki obrazu są czytane z pliku wideo, konwertowane na rozmiar
 480x720 pikseli i przetwarzane przez algorytm.
 Funkcja wyciąga z rezultatów przetwarzania potrzebne do późniejszego porównania
 prędkość i długość pojazdu.
 Pełny rezultat jest zapisywany w plikach jpg i bazie danych.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,basicstyle={\footnotesize},tabsize=4"
inline false
status open

\begin_layout Plain Layout

for i, line in enumerate(input_file.readlines()):     
\end_layout

\begin_layout Plain Layout

	data = line.split(sep="
\backslash
t")
\end_layout

\begin_layout Plain Layout

	lp = str(i)     
\end_layout

\begin_layout Plain Layout

	date, time, speed, lenght, axes = , data[0], data[1], data[3], data[4],
 data[5]     
\end_layout

\begin_layout Plain Layout

	HH, MM, SS = time.split(sep=":")[0], time.split(sep=":")[1], time.split(sep=":")[2
]     
\end_layout

\begin_layout Plain Layout

	orginal_file = "M151001_"+HH+MM+SS+".avi"  
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Kolejnym etapem jest przegląd całego pliku wejściowego.
 Z każdej linii tekstu wyciągana jest data, prędkość, długość samochodu
 oraz liczba osi.
 Na podstawie czasu pomiaru jest rozpoznawana nazwa pliku wideo.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,basicstyle={\footnotesize},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	if float(speed) > 0 and float(lenght) > 0 and int(axes) in (1, 2):    
     
\end_layout

\begin_layout Plain Layout

		found_file = None         
\end_layout

\begin_layout Plain Layout

		for SS2 in range(int(SS)-2, int(SS)+3):             
\end_layout

\begin_layout Plain Layout

			s = str(SS2) if len(str(SS2)) > 1 else "0"+str(SS2)             
\end_layout

\begin_layout Plain Layout

			f = "M151001_"+HH+MM+s+".avi"             
\end_layout

\begin_layout Plain Layout

			if f in avi_files:                 
\end_layout

\begin_layout Plain Layout

				found_file = f                 
\end_layout

\begin_layout Plain Layout

				used_files_count += 1                 
\end_layout

\begin_layout Plain Layout

				results = test_sigle_file(folder+"/"+f)   
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Skrypt sprawdza poprawność pomiaru: czy prędkość i długość jest dodatnia
 oraz czy liczba osi jest równa 1 bądź 2.
 Drugie kryterium jest wynikiem ustawienia kamery na stanowisku pomiarowym.
 Jest ona ustawiona zbyt blisko jezdni, przez co dłuższe pojazdy, posiadające
 więcej osi, nie mieszczą się w kadrze kamery co uniemożliwia ich detekcję
 w programie.
 Jeżeli dane są poprawne, wyszukiwany jest plik wideo odpowiadający tym
 danym.
 Znaleziony plik poddawany jest analizie.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,basicstyle={\footnotesize},tabsize=4"
inline false
status open

\begin_layout Plain Layout

				for r in results:                     
\end_layout

\begin_layout Plain Layout

					found_length, found_speed = r[0], r[1]
\end_layout

\begin_layout Plain Layout

					# błąd długości                     
\end_layout

\begin_layout Plain Layout

					length_error = round(abs(float(lenght) - found_length), 2)
\end_layout

\begin_layout Plain Layout

					length_error_pr = round((length_error / float(lenght)), 2) * 100  
                   
\end_layout

\begin_layout Plain Layout

					length_errors.append(length_error_pr)
\end_layout

\begin_layout Plain Layout

            		# błąd prędkości                     
\end_layout

\begin_layout Plain Layout

					speed_error = round(abs(float(speed) - found_speed), 2)           
       
\end_layout

\begin_layout Plain Layout

					speed_error_pr = round((speed_error / float(speed)), 2) * 100     
                
\end_layout

\begin_layout Plain Layout

					speed_errors.append(speed_error_pr)
\end_layout

\begin_layout Plain Layout

    	        	if speed_error_pr < 25 and length_error_pr < 25:         
                
\end_layout

\begin_layout Plain Layout

						status = "OK"                         
\end_layout

\begin_layout Plain Layout

						valid_detection_count += 1                     
\end_layout

\begin_layout Plain Layout

					else:                         
\end_layout

\begin_layout Plain Layout

						status = "BAD"                         
\end_layout

\begin_layout Plain Layout

						bad_detection_count += 1
\end_layout

\begin_layout Plain Layout

            	output_file.write(form % (lp, lenght, speed, orginal_file, found_fil
e, 
\end_layout

\begin_layout Plain Layout

					str(found_length), str(length_error), str(length_error_pr), 
\end_layout

\begin_layout Plain Layout

					str(found_speed), str(speed_error), str(speed_error_pr), status))
\end_layout

\begin_layout Plain Layout

            	break
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Następuje porównanie danych otrzymanych z przetwarzania obrazu z danymi
 wejściowymi.
 Jeśli dane te nie różnią się o więcej niż 25%, rezultat uznawany jest za
 prawidłowy, a odpowiednia informacja jest zapisywana w pliku wyjściowym.
\end_layout

\begin_layout Standard
Skrypt testujący zlicza prawidłowe oraz nieprawidłowe wpisy w plikach i
 rezultaty.
 Rekord w wejściowym pliku tekstowym, jest uznany za prawidłowy, wtedy gdy
 prędkość i długość ma dodatnią wartość a liczba osi jest równa jeden bądź
 dwa.
 Rezultat analizy jest uznawany za prawidłowy, jeżeli obliczona prędkość
 i długości nie różni się o więcej niż o 25% od danych wejściowych.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,basicstyle={\footnotesize},showstringspaces=false,tabsize=4,extendedchars=true"
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		if found_file is None:             
\end_layout

\begin_layout Plain Layout

			not_found_files_count += 1             
\end_layout

\begin_layout Plain Layout

			status = "nie znaleziono pliku"             
\end_layout

\begin_layout Plain Layout

            output_file.write("%5s %10s %10s %20s %20s 
\backslash
n" 
\end_layout

\begin_layout Plain Layout

			% (lp, lenght, speed, orginal_file, status))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	else:
\end_layout

\begin_layout Plain Layout

		unused_files_count += 1
\end_layout

\begin_layout Plain Layout

		status = "niepoprawny pomiar"
\end_layout

\begin_layout Plain Layout

		output_file.write("%5s %10s %10s %20s %20s 
\backslash
n" 
\end_layout

\begin_layout Plain Layout

		% (lp, lenght, speed, orginal_file, status))
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na końcu do pliku zapisywane są komunikaty o nieznalezieniu pliku wideo
 i błędnym formacie danych wejściowych.
 Zwrócony rezultat jest zapisywany do pliku tekstowego, którego format opisuje
 poniższa tabela.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nazwa pola
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Opis
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
numer wpisu z pliku wejściowego
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
długość
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
długość pojazdu z pliku wejściowego
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
prędkość
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
prędkość pojazdu z pliku wejściowego
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
plik oryginalny
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nazwa pliku avi na podstawie czasu pomiaru
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
plik znaleziony
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dopasowany plik avi
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
długość
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
długość wykryta na podstawie obrazu wideo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
błąd
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
różnica pomiarów długości
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
błąd %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stosunek błędu długości do wartości z pliku wejściowego
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
prędkość
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
prędkość wykryta na podstawie obrazu wideo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
błąd
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
różnica pomiarów prędkość
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
błąd %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stosunek błędu prędkości do wartości z pliku wejściowego
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
status
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes pld
\end_inset

OK
\begin_inset Quotes prd
\end_inset

 jeżeli pomiar został uznany za prawidłowy, 
\begin_inset Quotes pld
\end_inset

BAD
\begin_inset Quotes prd
\end_inset

 w p.
 p.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Format pliku wynikowego.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Wynik testów
\end_layout

\begin_layout Standard
W poniższej tabeli przedstawiono wynik działania skryptu.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nazwa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wartość
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wpisy zweryfikowane jako prawidłowe
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2111
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wpisy zweryfikowane jako nieprawidłowe
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
330
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wpisy bez pliku wideo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
181
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Obiekty zidentyfikowane prawidłowo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1657
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Obiekty zidentyfikowane błędnie
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
666
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Średni błąd wyznaczenia długości
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 %
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mediana błędu wyznaczenia długości
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12 %
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Błąd średni wyznaczenia prędkości
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22 %
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mediana błędu wyznaczenia prędkości
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15 %
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Czas wykonania skryptu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1:33:23
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Rezultat testu.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Skrypt testujący odrzucił około 1/5 danych wejściowych.
 Pojazdy posiadające większą liczbę osi, zostały na wstępie odrzuce, gdyż
 z powodu pozycji kamery na stanowisku pomiarowym, program nie był w stanie
 dokonać poprawnej identyfikacji.
\end_layout

\begin_layout Standard
Algorytm osiągnął poprawność sięgającą 72 procent.
 Główną przyczyną takiego wyniku testu jest niezgodność zarejestrowanych
 przejazdów z założeniami dotyczącymi działania programu.
 Błędne przypadki testowe zostały opisane w następnym podrozdziale.
 
\end_layout

\begin_layout Standard
Użycie skryptu pozwoliło przyśpieszyć testowanie, gdyż wydajność głównego
 programu jest ograniczona możliwościami widgetu z biblioteki PyGtk służącego
 do wyświetlania obrazu.
 Interfejs graficzny, aby program działał stabilnie, może wyświetlać nową
 klatkę obrazu co 100 ms, natomiast skrypt działał bez wyświetlania obrazu.
\end_layout

\begin_layout Subsubsection*
Nieudane przypadki działania
\end_layout

\begin_layout Standard
Podstawową przyczyną błędnej identyfikacji było założenie przyjęte przy
 pisaniu programu, mówiące o tym, że program ma służyć do identyfikacji
 pojazdów na drodze jednokierunkowej.
 W trakcie pracy nad algorytmem i późniejszych testów okazało się, że detekcja
 pojazdów w ruchu na drodze dwupasmowej jest zadaniem bardzo trudnym, jeżeli
 program ma do dyspozycji jedynie obraz wideo z pobocza drogi.
 Zachodzi wtedy wiele niekorzystnych zjawisk:
\end_layout

\begin_layout Itemize
Mijanie się samochodów - w tej sytuacji dochodzi do zlewania się obiektów
 w jeden na obrazie binarnym a pojazdy mogą dotrzeć do przeciwnych końców
 drogi w odwrotnej kolejności.
 W celu zabezpieczenia programu przed wynikającymi z tej sytuacji przekłamaniami
, należałoby dokonać poważnych zmian w algorytmie: zamiast pobierać informację
 o pojeździe na końcach obszaru 
\begin_inset Quotes pld
\end_inset

czułości
\begin_inset Quotes prd
\end_inset

 kamery, program musiałby śledzić obiekt w całym polu, wykryć kierunek ruchu
 i nadać mu szacowaną prędkość(przyrost pozycji w pikselach na kratkę obrazu).
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/bledy/2.jpg
	scale 60

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Wymijanie.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Wyprzedzanie się pojazdów - ta sytuacja może powodować, że dwa obiekty staną
 się dla programu jednym, jeżeli manewr zakończy się po za polem widzenia
 kamery.
 Skutkiem tej sytuacji będzie całkowita utrata wiadomości o obiekcie.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/bledy/4.jpg
	scale 60

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Wyprzedzanie.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Wzajemne rzucanie cienia i odbicia światła od samochodów - Powoduje to zniekszta
łcenia na obrazie po wyodrębnianiu tła, takie jak połączenia się dwóch pojazdów
 w jeden w skutek odbicia światła, albo podział pojazdu na dwa niezwiązane
 ze sobą obiekty.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/bledy/1.jpg
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pojazd na innym pasie.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Stanowisko pomiarowe było umieszczone przy drodze dwukierunkowej, posiadającej
 po dwa pasy ruchu w każdym kierunku.
 Pomiar za pomocą pętli indukcyjnych był przeprowadzany tylko na jednym
 pasie, przez co zidentyfikowane na podstawie obrazu parametry pojazdów
 na innych pasach były całkowicie nieadekwatne do danych wejściowych.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/bledy/5.jpg
	scale 60

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Pojazd niemieszczący się kadrze.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Rysunek 7.4 prezentuje sytuację, gdy pojazd nie mieści się kadrze.
 W wyniku tego nie można poprawnie określić długości pojazdu.
 Obliczenie prędkości auta wymaga znajomości położenia środka ciężkości
 i indeksu ramki obrazu.
 Jeżeli pojazd nie jest w całości w polu widzenia kamery, środek znajduje
 się w niewłaściwym miejscu, co obniża prędkość wynikową.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/bledy/3.jpg
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Pomiar w godzinach wieczornych.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na pomiar miały wpływ także warunki oświetleniowe.
 Na rysunku 7.5 pokazany jest pomiar w godzinach wieczornych.
 Mniejsza ilość światła słonecznego pogarszała widoczność konturu karoserii,
 co skutkowała błędnym oszacowaniem rozmiaru obiektu.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Podsumowanie
\begin_inset CommandInset label
LatexCommand label
name "chap:Podsumowanie"

\end_inset


\end_layout

\begin_layout Standard
Celem niniejsze pracy było stworzenie oprogramowania umożliwiającego przeprowadz
enie detekcji pojazdów samochodowych na podstawie obrazu wideo.
 
\end_layout

\begin_layout Standard
Systemy wizyjne znajdują coraz szersze wykorzystanie w aplikacjach związanych
 z ruchem drogowym.
 Jest to spowodowane kilkoma czynnikami, takimi jak: prosta, bezinwazyjna
 instalacja urządzeń monitorujących, możliwość transmisji danych przewodowo
 lub bezprzewodowo, zdalna obsługa stanowiska pomiarowego, łatwość integracji
 kamer z innymi elementami systemów ruchu drogowego.
\end_layout

\begin_layout Standard
Napisane oprogramowanie spełniało swoje zadanie.
 Program przeprowadzał detekcję pojazdów oraz dokonywał oceny wykrytych
 pojazdów pod względem rozmiaru, koloru i prędkości.
 Umożliwiał użytkownikowi dostosowywanie ustawień i parametrów algorytmu,
 zapis danych w kilku formatach(jpg, avi, sqlite3) oraz możliwość sterowania
 przebiegiem przetwarzania danych wejściowych.
\end_layout

\begin_layout Standard
Niestety nie we wszystkich przypadkach program działał prawidłowo.
 Pewne specyficzne sytuacje pojawiające się w wejściowych nagraniach powodowały
 błędy detekcji i identyfikacji pojazdów lub całkowicie uniemożliwiały wykrycie
 pojazdu.
 Powodem tych sytuacji były ograniczenia algorytmu oraz uproszczenia przyjęte
 w czasie pisania programu.
\end_layout

\begin_layout Standard
Realizacja pracy inżynierskiej pozwoliła autorowi utrwalić i wykorzystać
 wiedzę z przedmiotu 
\begin_inset Quotes pld
\end_inset

systemy wizyjne
\begin_inset Quotes prd
\end_inset

 w zagadnieniu praktycznym.
 W programie wykorzystano wiele algorytmów i operacji wizyjnych omawianych
 na zajęciach.
 Podczas tworzenia oprogramowania autor dogłębnie zapoznał się z bardzo
 popularną biblioteką OpenCV.
 Dodatkowo nauczył się nowego języka programowania i zaznajomił się z najważniej
szymi możliwościami jego wykorzystania, takimi jak budowa interfejsów graficznyc
h, praca z plikami(tekstowymi, graficznymi, json), obsługa baz danych czy
 przetwarzanie wielowątkowe.
\end_layout

\begin_layout Section*
Dalszy rozwój oprogramowania
\end_layout

\begin_layout Standard
Autor oprogramowania planuje jego dalszy rozwój.
 W przyszłości możliwe byłoby wprowadzenie następujących zmian:
\end_layout

\begin_layout Itemize
Lepszy podział kodu - przez znaczną część okresu powstawania programu, proces
 ten odbywał się bez dokładnej wiedzy o końcowym kształcie projektu.
 Spowodowało to, że kod programu miejscami jest niezrozumiały, w niektórych
 miejscach pojawiają się pozostałości po niewykorzystanych modułach i rozwiązani
ach, które porzucono.
 Kilka metod jest zdecydowanie za długie(funkcja odpowiadająca za śledzenie
 pojazdu).
 W kodzie mieszają się operacje o różnym poziomie abstrakcji, na przykład
 każda z klas dokonujących detekcji, śledzenie i oceny dorysowuje własne
 oznaczenia do obrazu wideo.
 Poprawa tych mankamentów będzie kluczowa i pozwoli na sprawne dodawanie
 nowych możliwości do programu.
\end_layout

\begin_layout Itemize
Identyfikacja pojazdów on-line - aby dodanie tej funkcji do programu było
 możliwe, musiałby on znacząco podnieść swoją wydajność.
 Rozwiązaniem tego problemu byłoby przemodelowanie algorytmu, w taki sposób,
 aby każdy etap przetwarzania(odczyt obrazu, detekcja, śledzenie, identyfikacja
 i zapis wyników) działał niezależnie w osobnym wątku.
 Konieczna byłaby również rezygnacja z wyświetlania obrazu, gdyż pochłania
 ona sporo czasu i mocy obliczeniowej.
\end_layout

\begin_layout Itemize
Strona WWW - program mógłby w łatwy sposób wysyłać dane z pomiarów(np.
 zapisywać je w bazie danych mysql), które następnie byłyby wizualizowane
 na stronie www.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "bibliografia"
options "bibtotoc,plplain"

\end_inset


\end_layout

\end_body
\end_document
